{% extends '@KontrolgruppenCore/process/main.html.twig' %}

{% macro printRevenueEntryRow(revenueEntry) %}
    <td>{{ form_widget(revenueEntry.service) }}</td>
    <td>{{ form_widget(revenueEntry.type) }}</td>
    <td>{{ form_widget(revenueEntry.amount) }}</td>
    <td class="future-savings">{{ form_widget(revenueEntry.futureSavingsType) }}</td>
    <td>
    </td>
{% endmacro %}
{% import _self as formMacros %}

{% block title %}{{ 'economy.show.title'|trans }}{% endblock %}

{% block content %}
    <div class="row">
        <div class="col-12">
            <h1 class="float-left">{{ 'economy.show.title'|trans }}</h1>

            {% if canEdit %}
                <span data-toggle="collapse" data-target="#economyEntryNew" aria-expanded="{{ collapse_economy_entry_form ? 'false' : 'true' }}">
                    <button data-toggle="button" aria-pressed="{{ collapse_economy_entry_form ? 'false' : 'true' }}"
                            class="btn btn-success btn-lg float-right">
                        <span class="show">{{ 'economy.actions.create'|trans }}</span>
                        <span class="hide">{{ 'journal_entry.actions.hide'|trans }}</span>
                    </button>
                </span>
            {% endif %}
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            {% if process.completedAt %}
                <div class="alert alert-warning">{{ 'process.completed_message'|trans }}</div>
            {% endif %}

            {% if canEdit %}
                <div class="col-12 collapse {{ collapse_economy_entry_form ? '' : 'show' }}" id="economyEntryNew">
                    <div class="bg-light border-bottom p-3 mb-3">
                        {# This consists of two forms #}

                        {# This form decides which economy entry type is created #}
                        {{ form_start(economy_entry_form) }}
                        {{ form_widget(economy_entry_form) }}
                        {{ form_end(economy_entry_form) }}

                        <div id="js-economy-form-spinner" class="spinner-border spinner-border-sm" style="display: none" role="status">
                            <span class="sr-only">{{ 'search.loading_results'|trans }}</span>
                        </div>

                        {# When an economy entry type has been chosen, this entity form becomes added #}
                        {% if form is defined %}
                            {% include '@KontrolgruppenCore/economy_entry/_form.html.twig' %}
                        {% endif %}
                    </div>
                </div>
            {% endif %}
        </div>
    </div>

    <h2>{{ 'economy.headline.economy_entries_service'|trans }}</h2>
    {% include '@KontrolgruppenCore/economy_entry/_economy_entry_service_table.html.twig' with {economyEntries: economyEntriesService} %}

    <h2>{{ 'economy.headline.economy_entries_income'|trans }}</h2>
    {% include '@KontrolgruppenCore/economy_entry/_economy_entry_income_table.html.twig' with {economyEntries: economyEntriesIncome} %}

    <h2>{{ 'economy.headline.economy_entries_account'|trans }}</h2>
    {% include '@KontrolgruppenCore/economy_entry/_economy_entry_base_table.html.twig' with {economyEntries: economyEntriesAccount} %}

    <h2>{{ 'economy.headline.revenue_calculation'|trans }}</h2>
    <div class="table-responsive">
        {{ form_start(revenueForm) }}
        <table id="revenue-calculation-table" class="table table-striped table-hover table-borderless thead-light">
            <thead>
            <tr>
                <th>{{ 'economy.table.revenue_entry.service'|trans }}</th>
                <th>{{ 'economy.table.revenue_entry.type'|trans }}</th>
                <th>{{ 'economy.table.revenue_entry.amount'|trans }}</th>
                <th>{{ 'economy.table.revenue_entry.future_savings_type'|trans }}</th>
                <th></th>
            </tr>
            </thead>
            <tbody class="revenue_entries" data-prototype="{{ formMacros.printRevenueEntryRow(revenueForm.revenueEntries.vars.prototype)|e('html_attr') }}">
                {% for revenueEntry in revenueForm.revenueEntries %}
                    <tr>
                        {{ formMacros.printRevenueEntryRow(revenueEntry) }}
                    </tr>
                {% endfor %}
            </tbody>
        </table>
        <button type="submit">Submit</button>

        {{ form_end(revenueForm) }}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    {{ encore_entry_script_tags('addEconomyEntry') }}

    {#{{ encore_entry_script_tags('prepareRevenueCalculation') }}#}

    {% if canEdit %}
        <script type="text/javascript">
            var $collectionHolder;
            var $addButton = $('<button type="button" class="add_revenue_entry_link">Add</button>');
            var $newButtonElement = $('<tr class="new-element"><td colspan="5"></td></tr>').append($addButton);

            // Add buttons to form when the page is loaded.
            $(document).ready(function() {
                // Get the element that holds the collection.
                $collectionHolder = $('tbody.revenue_entries');

                // Add the
                $collectionHolder.append($newButtonElement);

                // Add "remove" buttons to existing entries.
                $collectionHolder.find('tr:not(.new-element)').each(function() {
                    addRemoveRevenueEntryButton($(this));
                });

                // Setup index as number of entries. The index is used to name the forms.
                $collectionHolder.data('index', $collectionHolder.find(':input').length);

                // When add button is pressed, add a new form element.
                $addButton.on('click', function() {
                    addRevenueEntryForm($collectionHolder, $newButtonElement);
                });
            });


            /**
             * Add remove revenue entry button.
             */
            function addRemoveRevenueEntryButton($element) {
                var $removeFormButton = $('<button type="button">Remove</button>');
                $element.append($removeFormButton);

                // When the button is pressed, remove the element.
                $removeFormButton.on('click', function() {
                    $element.remove();
                });
            }

            /**
             * Add a new revenue entry form.
             *
             * @param $collectionHolder
             *   The element holding the revenue entry forms
             * @param $newLinkElement
             *   The new button element
             */
            function addRevenueEntryForm($collectionHolder, $newLinkElement) {
                // Get the data-prototype for revenue entries.
                var prototype = $collectionHolder.data('prototype');

                // Get the new index.
                var index = $collectionHolder.data('index');

                var newForm = prototype;

                // Replace '__name__' in the prototype's HTML to instead be a number based on how many items we have.
                newForm = newForm.replace(/__name__/g, index);

                // Increase the index with one for the next item.
                $collectionHolder.data('index', index + 1);

                // Display the form in the page.
                var $newFormElement = $('<tr></tr>').append(newForm);
                $newLinkElement.before($newFormElement);

                addRemoveRevenueEntryButton($newFormElement);
            }
        </script>
    {% endif %}
{% endblock %}
